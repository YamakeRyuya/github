@charset "UTF-8";

/* =========================
   Base / Variables
   ========================= */
:root {
  --header-height: 5rem; /* ヘッダーの高さ */
  --color-header-bg: #24292f; /* ヘッダー背景: GitHubダークグレー */
  --color-hero-bg: #2b3137; /* ヒーロー背景: さらに濃いグレー */
  --color-text: aliceblue; /* 明色テキスト: アリスブルー */
  /* 色の共通変数（用途: 色名のメモ） */
  --color-white: #ffffff; /* ベース: 純白 */
  --color-link: #ffffff; /* リンク: 白（暗背景用） */
  --color-stroke-muted: rgb(182, 177, 177); /* 線: 淡グレー */
  --color-text-muted: #57606a; /* テキスト(弱調): スレートグレー */
  --color-text-dark: #24292f; /* テキスト(濃色): ダークグレー */
  --color-text-faded: #ffffff99; /* テキスト(弱白): 半透明の白(60%) */
  --color-border-dark: #000000; /* 枠線(濃): 黒 */
  --color-border-muted: #ffffff99; /* 枠線(弱白): 半透明の白(60%) */
  --color-button-bg: rgb(52, 183, 89); /* ボタン背景: グリーン */
  --color-button-text: azure; /* ボタン文字: アジュール(水色) */
  --color-building-gradient-start: #9e68a8; /* グラデ開始: パープル */
  --color-building-gradient-end: #5274b5; /* グラデ終了: ブルー */
  /* 記事アイコン/枠線の調整用（矢印と枠の余白など） */
  --article-border-width: 1px; /* 枠線の太さ */
  --article-arrow-size: 1rem; /* 矢印アイコンのサイズ */
  --article-arrow-gap: 1rem; /* 矢印と枠線の間隔 */
  --article-arrow-color: var(--color-text-muted); /* 矢印の通常色 */
  --article-arrow-color-hover: #0969da; /* ホバー時の矢印色 */
  /* ロボット右上のホバー用オーバーレイ設定 */
  --robot-overlay-size: clamp(6rem, 28%, 12rem); /* 画像サイズ */
  --robot-overlay-offset-x: 0; /* 右方向の微調整(px, %, rem 可) */
  --robot-overlay-offset-y: 0; /* 下方向の微調整(px, %, rem 可) */
}
* {
  margin: 0; /* 既定余白除去 */
  padding: 0;
  font-family: "Roboto", sans-serif; /* 基本フォント */
}

*,
*::before,
*::after {
  box-sizing: border-box;
} /* 全要素に適用 */

.github-logo {
  fill: var(--color-white); /* #ffffff ロゴ白 */
  width: 32px; /* ロゴの幅を32pxに修正 */
  height: 32px; /* ロゴの高さを32pxに設定 */
  display: block; /* レイアウトの安定化のためブロック表示 */
}

nav ul {
  margin: 0; /* ulの外側余白をリセット */
  padding: 0; /* ulの内側余白をリセット */
  list-style: none; /* デフォルトのマーカーを非表示 */
}

header {
  width: 100%; /* 全幅 */
  padding: 1rem; /* 内側余白 */
  height: var(--header-height); /* 高さ */
  display: flex; /* 子要素横並び */
  align-items: center; /* 縦中央 */
  background-color: var(--color-header-bg); /* #24292f ヘッダー背景 */
  color: var(--color-text); /* #f0f8ff ヘッダー文字 */
}

.header-left-group {
  display: flex; /* 子要素を横並びに */
  align-items: center; /* 縦中央揃え */
  gap: 30px; /* 要素間スペース */
}

.header-nav ul {
  display: flex; /* liを横並びに */
  list-style: none; /* マーカーを非表示 */
  padding: 0; /* 余白をリセット */
  margin: 0; /* 余白をリセット */
  gap: 16px; /* 各項目間のスペースを16pxに */
  align-items: center; /* アイコンとテキストの縦位置を揃える */
}

.triangle-icon {
  width: 12px;
  height: 12px;
  fill: none; /* 塗りつぶしなし */
  stroke-width: 1; /* 線の太さ */
  stroke-linecap: round; /* 線端を丸く */
  stroke-linejoin: round; /* 線の角を丸く */
  vertical-align: middle; /* テキストの中央に揃える */
  stroke: var(--color-stroke-muted); /* #b6b1b1 薄グレー線 */
}

.sign_in_up {
  display: flex;
  gap: 16px;
  margin-left: auto; /* 右寄せ */
  align-items: center; /* 縦中央揃え */
}

#sign_up {
  border: 1px solid var(--color-white); /* #ffffff 枠線白 */
  border-radius: 4px; /* 角丸 */
  padding: 4px 6px 6px 6px; /* 内側余白 */
}

a {
  color: var(--color-link); /* #ffffff リンク白 */
  text-decoration: none; /* 下線を消す */
}

/* 白背景のセクションでは通常色に（可読性確保） */
/* 記事領域のリンクのみ“標準の青”に */
article a {
  color: #0969da;
  text-decoration: none;
}

/* インラインリンクのパディングをリセット */
.inline-link {
  padding: 0;
}

/* インラインリンクのホバーでポインター表示 */
.inline-link:hover {
  cursor: pointer;
}

main {
  position: relative; /* 基準 */
  width: 100%; /* 全幅 */
  min-height: max(
    549px,
    calc(100vh - var(--header-height))
  ); /* 最小高: 画面高-ヘッダー を下限549pxで確保 */
  margin: 0 auto; /* 中央 */
  padding: 0; /* 余白0 */
  display: flex; /* 縦積み */
  flex-direction: column; /* 縦方向 */
  justify-content: center; /* 縦中央（メイン軸） */
  align-items: center; /* 横中央（交差軸） */
  background-color: var(--color-hero-bg); /* #2b3137 ヒーロー背景 */
  background-image: url(./svg/simple-codelines.svg); /* 背景画像 */
  background-repeat: no-repeat; /* 繰返なし */
  /* background-attachment: fixed; 固定 　スクロールしても背景は止まって見える */
}

.main-github-logo {
  width: 3rem; /* ロゴ幅 */
  height: 3rem; /* ロゴ高 */
  margin: 1rem auto; /* 中央寄せ */
  fill: var(--color-white); /* #ffffff ロゴ白 */
  display: block; /* レイアウト安定化 */
}

.main-div {
  display: flex; /* 縦積み */
  flex-direction: column; /* 縦方向 */
  align-items: center; /* 横中央 */
  justify-content: center; /* 縦中央 */
  text-align: center; /* テキスト中央 */
  color: var(--color-text); /* #f0f8ff メイン文字 */
  gap: 12px; /* 要素間隔 */
  transform: translateY(-1.5rem);
}

main h1 {
  margin: 0; /* 余白リセット */
  font-size: 2rem; /* サイズ */
  font-weight: 600; /* 太さ */
  line-height: 1.25; /* 行高 */
  text-align: center; /* 中央 */
  color: var(--color-text); /* 色 */
}

.main-div p {
  color: var(--color-text-faded); /* #ffffff99 薄白文字 */
  margin: 0; /* 余白0 */
  line-height: 1.5; /* 行間 */
  max-width: 90ch; /* 行長制御 */
  text-align: justify; /* 両端揃え */
}

#button-in-main {
  background-color: var(--color-button-bg); /* #34b759 ボタン背景 */
  color: var(--color-button-text); /* #f0ffff ボタン文字 */
  font-size: 1rem;
  font-weight: 600;
  border: 1px solid var(--color-border-dark); /* #000000 ボタン枠 */
  border-radius: 0.375rem; /*6px*/
  padding: 0.9rem 1.5rem 1.1rem;
  text-align: center;
  line-height: 1rem;
  margin-top: 1rem;
}

#button-in-main:hover {
  cursor: pointer;
}

.building {
  display: flex; /*justify-content align-itemはflexかgridにしか効かない。text-aligin;center;が有効な場合も*/
  align-items: flex-start; /* 先頭行をアイコン上端と揃える */
  justify-content: center; /* 全体を中央寄せ */

  margin: 0;
  padding: 1.5rem 2rem;
  background: linear-gradient(
    to right,
    var(--color-building-gradient-start) 0%,
    /* #9e68a8 左グラデ */ var(--color-building-gradient-end) 100%
      /* #5274b5 右グラデ */
  );
}

/* フレックスレイアウトなので clearfix は不要 */

.building-icon {
  display: block;
  width: 10rem;
  height: auto; /* 画像の縦幅を内容に合わせて可変 */
  margin-left: auto;
}
.building-text {
  margin: auto; /* UAスタイルの段落マージンをリセット */
  max-width: 65ch; /* 行幅をテキスト長で制御（vhは不適切） */
  text-align: left; /* 左端を揃える */
  color: var(--color-white); /* #ffffff テキスト白 */
  line-height: 1.4;
}

.open-source-project-business-use {
  color: var(--color-text); /* #f0f8ff 強調リンク */
  border-bottom: 1px solid var(--color-border-muted); /* #808080 下線 */
}

.more-smarter {
  /* 現在の見た目高さは維持しつつ可変に */
  min-height: 14rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 0.75rem; /* 要素間の間隔 */
  padding: 2rem 0; /* 内側に余白を確保 */
  margin: 2rem 0; /* セクション外側の縦余白のみ */
}
#more-smarter-top {
  margin-top: 0; /* 大きすぎる上余白をリセット */
  font-size: 12px;
  color: var(--color-text-muted); /* #57606a 弱調テキスト */
}

#more-smarter-middle {
  margin: 0%;
  padding: 0%;
  color: var(--color-text-dark); /* #24292f 見出し */
}

#more-smarter-second-middle {
  color: #24292f;
  font-weight: 300;
  text-align: center;
  /* 可変幅だが読みやすい行幅に制限 */
  width: min(90%, 56ch);
  color: var(--color-text-muted); /* #57606a 補足テキスト */
  font-size: 20px;
  line-height: 1.4;
}

#more-smarter-button {
  background-color: var(--color-white); /* #ffffff ボタン背景 */
  color: var(--color-text-dark); /* #24292f ボタン文字 */
  border: 1px solid grey; /* #000000 ボタン枠 */
  border-radius: 5px;
  padding: 10px 1.5rem;
  font-size: 16px;
  font-weight: 600;
}
#more-smarter-button:hover {
  cursor: pointer;
  box-shadow: inset 0 0 0 2px #000;
  transition: box-shadow 0.25s ease;
}

#top-text-github {
  color: var(--color-text-dark); /* #24292f 見出し */
  font-weight: 400;
}

/* セクション間の区切り線 */
.section-divider {
  border: 1;
  border-top: 1px solid var(--color-border-muted);
  width: 100%;
  margin: 5rem 0;
}

.all-articles-class > a {
  text-decoration: none;
  color: var(--color-text-dark);
}

/* 3記事と左のSVGを横並びにするラッパー
   - 高さ: 画像の高さに自動でフィット（固定値は撤去）
   - 配置: 子要素同士の高さを揃えるため stretch
   - 位置: セクション全体を右へオフセット */
.all-articles-class {
  /* height: 50vw; 旧: ビューポート幅依存の高さ → 撤去して画像に合わせる */
  display: flex; /* 画像(左) + 記事(右) を横並び */
  flex-direction: row; /* 明示：横方向 */
  align-items: center; /* 縦軸を中央で揃える */
  justify-content: center; /* セクション全体を中央に配置 */
  gap: 3rem;
  max-width: 1200px; /* 中央寄せ用の幅上限 */
  width: 100%;
  margin: 4rem auto; /* 左右中央寄せ */
  padding-inline: clamp(1rem, 4vw, 3rem); /* 画面端との余白 */
}

.article-h {
  margin: 0;
  font-size: 20px;
}

.article-p {
  width: 44ch;
  font-size: 14px;
  color: #000000; /*  */
  line-height: 1.5;
  font-weight: 400;
  margin-top: 0.5rem;
}

/* 右カラム：3つの記事スタック
   - 高さ: 左のSVGと同じ高さに合わせる
   - 等間隔: 3記事を縦方向に均等配置
   - 余白: 上下にパディングで読みやすく */
.three-articles {
  width: 48ch;
  display: flex; /* 3記事を縦積み */
  flex-direction: column;
  gap: 0 1.5rem; /* 3記事の縦の間隔を固定で確保 */
  /* height: 100%; 旧: 画像の高さに合わせて伸ばす → 中央揃えに変更したため不要 */
  padding-block: 12px; /* 上下の余白（読みやすさ向上） */
}

.three-articles article {
  position: relative; /* 疑似要素の配置基準 */
  padding: 1rem 1.5rem 1rem 1rem;
  /* 矢印アイコン分 + 余白分だけ右パディングを追加して、テキストと重ならないようにする */
  padding-right: calc(
    1rem + var(--article-arrow-gap) + var(--article-arrow-size)
  );
  /* ホバー時に枠線を出してもレイアウトがズレないように初期状態で透明の枠線を確保 */
  border: var(--article-border-width) solid transparent;
  transition: box-shadow 0.25s ease, transform 0.25s ease,
    border-color 0.2s ease;
}
/* 記事の右側に矢印を表示（記事との間隔は24px） */
.three-articles article::after {
  content: "";
  position: absolute;
  top: 50%;
  /* アイコンを記事内右端に配置 */
  right: var(--article-arrow-gap);
  transform: translateY(-50%);
  width: var(--article-arrow-size);
  height: var(--article-arrow-size);
  /* マスクで形状を抜き、色は background-color で制御 */
  background: none;
  background-color: var(--article-arrow-color);
  transition: background-color 0.2s ease;
  -webkit-mask: url(./svg/arrow.svg) no-repeat center /
    var(--article-arrow-size) var(--article-arrow-size);
  mask: url(./svg/arrow.svg) no-repeat center / var(--article-arrow-size)
    var(--article-arrow-size);
}

/* hover で矢印色を #0969da に */
.three-articles article:hover::after {
  background-color: var(--article-arrow-color-hover);
}
.robot-icon {
  vertical-align: middle; /* テキストの中央に揃える */
  /* 相対値でレスポンシブに。最小16rem、ビューポートの45%、最大40rem */
  width: clamp(16rem, 55vw, 40rem);
  max-width: 100%;
  height: auto; /* アスペクト比を維持して拡縮 */
  aspect-ratio: 634 / 589; /* レイアウトシフト抑制 */
}

.robot-figure {
  position: relative; /* オーバーレイの基準 */
  display: inline-block; /* 画像サイズにフィット */
}

/* ロボット右上に“浮き出す”オーバーレイ */
.robot-overlay {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  transform: translate(
      var(--robot-overlay-offset-x),
      calc(var(--robot-overlay-offset-y) - 8%)
    )
    scale(0.9);
  width: var(--robot-overlay-size);
  aspect-ratio: 1 / 1;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  opacity: 0; /* 初期は非表示 */
  pointer-events: none; /* 操作は透過 */
  z-index: 2;
  transition: opacity 0.5s ease, transform 0.5s ease; /* ふわっと */
  /* filter: drop-shadow(0 6px 16px rgba(0, 0, 0, 0.18)); 浮遊感 */
}

/* 記事ごとにホバー時のオーバーレイを切り替え（:has 利用） */
/* article1 → code、article2 → chaos、article3 → tools を表示 */

/* 各オーバーレイに固定の画像を割り当て */
.overlay-code {
  background-image: url(./svg/home-illo-team-code.svg);
}
.overlay-chaos {
  background-image: url(./svg/home-illo-team-chaos.svg);
}
.overlay-tools {
  background-image: url(./svg/home-illo-team-tools.svg);
}

.all-articles-class:has(.article1:hover) .overlay-code,
.all-articles-class:has(.article2:hover) .overlay-chaos,
.all-articles-class:has(.article3:hover) .overlay-tools {
  opacity: 1;
  transform: translate(
      var(--robot-overlay-offset-x),
      var(--robot-overlay-offset-y)
    )
    scale(1);
}
.article1:hover,
.article2:hover,
.article3:hover {
  border-color: #cac7c7;
  cursor: pointer;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
  fill: #0969da;
}

.security-and-management {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem; /* 要素間の間隔 */
  margin: 3rem 0;
}

.security-and-management > h2 {
  color: var(--color-text-dark); /* #24292f 見出し */
  font-weight: 700;
}

.security-and-management-title {
  text-align: center;
  font-size: 0.75rem;
  color: var(--color-text-muted); /* #586069 */
}
.security-and-management-description {
  font-size: 20px;
  width: 59ch;
  text-align: center;
  justify-content: center;
  color: var(--color-text-dark); /* #586069 */
  font-weight: 200;
  inline-size: 1.4;
}

.security-and-management-description-highlight {
  color: #000;
  font-weight: 400;
}

.security-and-management-button {
  background-color: var(--color-white);
  border: 1px solid rgb(186, 186, 186); /*var(--color-border-muted)だと映らなかった*/
  border-radius: 5px;
  padding: 1rem 1.2rem;
  font-size: 15px;
  width: 270px;
  text-align: center;
  font-weight: 600;
  line-height: 1;
  margin-top: 1rem;
  border: 1;
}

.security-and-management-button:hover {
  background-color: var(--color-border-muted);
  box-shadow: inset 0 0 0 2px #000;
  transition: box-shadow 0.2s ease;
}

.sourceCode-security {
  /* Flexで2カラム（左:記事スタック / 右:画像）を中央に配置。内部の間隔はgapで管理 */
  display: flex;
  justify-content: center; /* 2カラムをまとめて中央寄せ */
  align-items: center; /* 左スタックと画像の縦中央を揃える */
  gap: clamp(1rem, 4vw, 3rem); /* カラム間のスペース */
  margin: 5rem auto 0;
  padding-inline: clamp(1rem, 4vw, 3rem);
  max-width: 1200px;
  width: 100%;
  line-height: 1.4;
}

/* 左側：記事を縦スタック。上下パディング + 間はgap、marginは使わない */
.sourceCode-security__left {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1.25rem; /* 上下2記事の間 */
  max-width: 50ch; /* 記事の横幅は維持 */
  width: 100%;
}
.sourceCode-security__left > article {
  margin: 0; /* 余白は使わず */
  padding: 0; /* 基本は0、上下だけ個別に足す */
}
.sourceCode-security__left > article:first-child {
  padding-top: 0.75rem;
}

.sourceCode-security__left > article:last-child {
  padding-bottom: 0.75rem;
}

/* タイポグラフィ（従来の指定を移行） */
.sourceCode-security__left > article h2,
.sourceCode-security-article > h2 {
  font-size: 1.2rem;
}
.sourceCode-security__left > article p,
.sourceCode-security-article > p {
  font-size: 14px;
  max-width: 50ch;
  margin-top: 6px;
}

/* 右側：画像。padding/marginは取らずに中央に寄せる。記事より少し細め */
.sourceCode-security__image,
.sourceCode-security > img,
.security-image {
  width: 100%;
  max-width: 50ch; /* 左より少し小さく */
  height: auto;
  align-self: center; /* 左のスタックと縦中央を合わせる */
  margin: 0;
  padding: 0;
}

/* hosting をFlexで中央寄せするためのラッパー */
.hosting-wrap {
  display: flex;
  justify-content: center; /* 子要素(.hosting)を中央に */
  width: 100%;
}

.hosting {
  display: flex;
  margin-top: 3rem;
  /* 透明度なしの実線（既存パレットの不透明色） */
  border: 1px solid var(--color-stroke-muted);
  padding: 1.5rem;
  border-radius: 5px;
  width: 60ch;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.hosting-text {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 14px;
}

.plan-to-compare {
  display: inline-flex;
  direction: row;
  align-items: center;
  color: blue;
  fill: blue;
  gap: 10px;
}

.community-for-developer-title-group {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem; /* 要素間の間隔 */
  margin: 3rem 0 1rem 0;
}

#community {
  font-size: 12px;
  color: var(--color-text-muted); /* #57606a */
}
.community-for-developer-title-group > h3 {
  font-weight: 700;
  font-size: 24px;
}
#community-description {
  color: var(--color-text-muted);
  font-weight: 200;
  font-size: 20px;
  margin-top: 1rem;
}
#community-description > span {
  color: var(--color-text-dark);
  font-weight: 500;
}

/* Community セクション全体を中央2カラムに配置（左: circles / 右: articles） */
.community {
  display: grid;
  grid-template-columns: 1fr 1fr; /* 1カラムにして全体中央に */
  justify-content: center;
  align-items: stretch;
  column-gap: 3rem;
}

/* タイトル行は2列にまたがる */
.community-for-developer {
  grid-column: 1 / -1;
}

.community-for-developer-circle-group {
  /* 逆三角形レイアウトのためGridに変更 */
  display: grid;
  grid-template-columns: max-content max-content; /* 円のサイズに応じて列幅を決める */
  justify-content: center; /* コンテナ全体を中央に */
  justify-items: center; /* 各セル内の要素も中央に */
  align-items: center;
  column-gap: 2rem;
  row-gap: 1.5rem;
  margin-top: 1rem;
  color: var(--color-white);
}

.orange-circle {
  justify-content: center;
  align-items: center;
  flex-direction: column;
  display: flex;
  position: relative;
  background-color: #fb8532;
  height: 14rem;
  aspect-ratio: 1 / 1;
  border-radius: 50%;
  /* hover時の視覚拡大はtransformで行い、レイアウトを変えない */
  /* articleのtransitionと同じ秒数(0.3s)に揃える */
  transition: transform 0.3s ease, outline-color 0.3s ease;
  /* outlineは初期から透明で置いておき、色だけをアニメーション */
  outline: 1px solid transparent;
  outline-offset: 0;
  will-change: transform;
}

.blue-circle,
.purple-circle {
  /* アンカーの全面当たり判定用にrelative化 */
  position: relative;
}

/* 空アンカーで円全体をクリック可能に */
.circle-link {
  position: absolute;
  inset: 0;
  display: block;
  border-radius: inherit;
  text-decoration: none;
  cursor: pointer;
  /* フォーカス時の見やすいアウトライン */
}

.hosting-number {
  font-size: 2.5rem;
  line-height: 1.2;
  margin-bottom: 0.25rem;
}

.hosting-number span {
  font-weight: 200;
}

.blue-circle {
  background-color: #0969da;
  height: 11rem;
  aspect-ratio: 1 / 1;
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  display: flex;
  font-weight: 300;
  transition: transform 0.3s ease, outline-color 0.3s ease;
  outline: 1px solid transparent;
  outline-offset: 0;
  will-change: transform;
}

.number-of-users {
  font-size: 1.5rem;
}
.number-of-users span {
  font-size: 1.5rem;
  font-weight: 400;
  line-height: 1.2;
}

.purple-circle {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: #6f42c1;
  height: 8rem; /* 1remだと小さすぎて見えないため拡大 */
  aspect-ratio: 1 / 1;
  border-radius: 50%; /* 円形にする */
  /* 下段中央に配置するため2列分をスパン */
  grid-column: 1 / -1;
  justify-self: center;
  transition: transform 0.3s ease, outline-color 0.3s ease;
  outline: 1px solid transparent;
  outline-offset: 0;
  will-change: transform;
}

/* スモールスクリーンでは縦並びにフォールバック */
@media (max-width: 640px) {
  .community-for-developer-circle-group {
    grid-template-columns: 1fr;
    justify-items: center;
  }
  .purple-circle {
    grid-column: auto;
  }
  .community {
    display: block;
  }
  .article-for-circle-wrap {
    height: auto;
    justify-content: initial;
    gap: 1.25rem;
    max-width: none;
    margin: 1rem 0;
    width: auto; /* モバイルでは自動幅に戻す */
  }
}

.number-of-organization {
  font-size: 1.5rem;
}
.number-of-organization span {
  font-size: 1.5rem;
  font-weight: 400;
  line-height: 1.2;
}

.hosting-label,
.number-of-users-text,
.number-of-organization-text {
  font-size: 0.7rem;
  color: var(--color-white);
  font-weight: 400;
}

.community-for-developer-circle-group-wrap {
  margin: 1rem;
  margin-right: 5rem;
  display: flex;
  justify-content: center; /* 中央寄せ */
  align-items: flex-start; /* 上端揃え */
  gap: 4rem; /* 左右カラムの中央間隔 */
  /* 親の.grid(.community)内で中央に配置 */
  grid-column: 1 / -1;
  justify-self: center;
  width: max-content; /* 中身の幅に合わせて中央へ */
}

.article-for-circle-wrap {
  color: var(--color-text-dark); /* #57606a */
  display: flex;
  flex-direction: column;
  margin: 0;
  font-size: 14px;
  /* 円グループの実幅（15rem + 2rem + 11rem = 28rem）に揃える */
  /* width: calc(15rem + 2rem + 11rem); */
  width: 22rem; /*22rem　articleの幅*/
  justify-content: space-between;
}
.article-for-orange-circle,
.article-for-blue-circle,
.article-for-purple-circle {
  display: flex;
  position: relative; /* ::after の基準 */
  /* 左右1rem、上下1.5rem。右は矢印分を確保 */
  padding: 1.5rem 1rem;
  padding-right: calc(
    1rem + var(--article-arrow-gap) + var(--article-arrow-size)
  );
  border: 1px solid transparent; /* レイアウトシフト防止 */
  transition: border-color 0.5s ease, box-shadow 0.3s ease;
}

.arrow-icon-right {
  /* テキストサイズに連動させ、縮小されないようにする */
  width: 2em;
  height: 2em;
}

/* Community の article 右端に矢印を ::after で表示 */
.article-for-orange-circle::after,
.article-for-blue-circle::after,
.article-for-purple-circle::after {
  content: "";
  position: absolute;
  top: 50%;
  right: var(--article-arrow-gap);
  transform: translateY(-50%);
  width: var(--article-arrow-size);
  height: var(--article-arrow-size);
  background-color: var(--article-arrow-color);
  transition: background-color 0.2s ease;
  -webkit-mask: url(./svg/arrow.svg) no-repeat center /
    var(--article-arrow-size) var(--article-arrow-size);
  mask: url(./svg/arrow.svg) no-repeat center / var(--article-arrow-size)
    var(--article-arrow-size);
}

/* Community 記事ホバー時：枠線 + アウトライン風の box-shadow を付与 */
.article-for-orange-circle:hover,
.article-for-blue-circle:hover,
.article-for-purple-circle:hover {
  border: 1px solid rgb(224, 223, 223);
  box-shadow: 0 0 20px 1px rgb(224, 223, 223);
  border-radius: 5px;
  cursor: pointer;
}

/* orange-circle
  blue-circle
  purple-circle
*/

/* Cross-hover: purple article <-> orange circle */
/* レイアウトを押し広げてしまうheight変更は無効化（参考として残す）
.community-for-developer-circle-group-wrap:has(.article-for-purple-circle:hover) .orange-circle {
  height: 14.5rem;  
}
*/

/* レイアウトに影響しないtransformで僅かに拡大 + 装飾 */
.community-for-developer-circle-group-wrap:has(.article-for-orange-circle:hover)
  .orange-circle {
  transform: scale(1.04);
  /* borderはレイアウトに影響するため、outline/box-shadowで代替 */
  outline-color: rgb(224, 223, 223);
  z-index: 1;
}

/* 直接circleをhoverした場合も同じ体験に */
.community-for-developer-circle-group-wrap:has(.orange-circle:hover)
  .article-for-orange-circle {
  border: 1px solid rgb(224, 223, 223);
  box-shadow: 0 0 20px 1px rgb(224, 223, 223);
  border-radius: 5px;
  cursor: pointer;
}

.community-for-developer-circle-group-wrap:has(.blue-circle:hover)
  .article-for-blue-circle {
  border: 1px solid rgb(224, 223, 223);
  box-shadow: 0 0 20px 1px rgb(224, 223, 223);
  border-radius: 5px;
  cursor: pointer;
}

.community-for-developer-circle-group-wrap:has(.article-for-blue-circle:hover)
  .blue-circle {
  transform: scale(1.06);
  outline-color: rgb(224, 223, 223);
  z-index: 1;
}

.community-for-developer-circle-group-wrap:has(.article-for-purple-circle:hover)
  .purple-circle {
  transform: scale(1.06);
  outline-color: rgb(224, 223, 223);
  z-index: 1;
}

.community-for-developer-circle-group-wrap:has(.purple-circle:hover)
  .article-for-purple-circle {
  border: 1px solid rgb(224, 223, 223);
  box-shadow: 0 0 20px 1px rgb(224, 223, 223);
  border-radius: 5px;
  cursor: pointer;
}
.orange-circle:hover {
  transform: scale(1.06);
  outline-color: rgb(224, 223, 223);
  z-index: 1;
}
.blue-circle:hover {
  transform: scale(1.06);
  outline-color: rgb(224, 223, 223);
  z-index: 1;
}
.purple-circle:hover {
  transform: scale(1.04);
  outline-color: rgb(224, 223, 223);
  z-index: 1;
}

.integration {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem; /* 要素間の間隔 */
  margin: 3rem 0;
}

.integration > h2 {
  color: var(--color-text-dark); /* #24292f 見出し */
  font-weight: 700;
}

#integration {
  font-size: 12px;
  color: var(--color-text-muted);
}

.title-under-text {
  font-size: 1.25rem;
  color: var(--color-text-dark);
  font-weight: 200;
  text-align: center;
  width: min(90%, 56ch);
}

.title-under-text > span {
  color: var(--color-text-dark);
  font-weight: 500;
}

.integration > button {
  padding: 0.75rem 2rem 1rem;
  background-color: var(--color-white);
  border: 1px solid rgb(180, 178, 178); /* #000000 ボタン枠 */
  border-radius: 5px;
  font-size: 14px;
  font-weight: 600;
  line-height: 1;
  margin-top: 2rem;
}
.integration > button:hover {
  box-shadow: inset 0 0 0 2px #000;
  transition: box-shadow 0.5s ease;
}
.icons {
  display: flex;
}

/* icons row: 幅を縮めて中央に配置（flex）。アイコンサイズは固定。 */
.icons > .various-icons {
  --icon-size: 4rem; /* 丸アイコンの一辺（固定） */
  --icon-gap: 4rem; /* アイコン間の隙間 */
  --stagger-offset: 3rem; /* ずらし量（下方向） */
  display: inline-flex; /* コンテンツ幅に合わせて縮める */
  margin-top: 2rem;
  gap: var(--icon-gap);
  margin-inline: auto; /* 中央寄せ */
  padding-bottom: var(--stagger-offset); /* ずらしの余白を確保 */
}

/* grid-area は不使用に変更 */

/* 各セル（div）を丸アイコン枠にし、画像は子imgで表示 */
.icons > .various-icons > div {
  position: relative; /* 子imgの絶対配置基準 */
  width: var(--icon-size);
  height: var(--icon-size);
  border-radius: 50%; /* 丸くする */
  overflow: visible; /* 画像の下げ分を可視化（行全体の余白は親で確保） */
  /* 背景円用のカスタムプロパティ（デフォルトは無効=透明） */
  --bg-color: transparent; /* 背景円の色 */
  --bg-spread: 0rem; /* 背景円の拡張量（片側） */
}

/* 子imgはタグで描画（ロゴ本体）。背景円は ::before で描画 */
.icons > .various-icons > div > img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* 基本は中央 */
  width: 3rem; /* 原寸を優先（大き過ぎる場合のみ縮小） */
  height: 3rem;
  /* border-radius: inherit; 丸に沿わせる */
  pointer-events: none; /* クリック透過（必要なら外す） */
  z-index: 1; /* 背景円より前面に */
  /*
    ダブルクリック等で画像が選択状態になるのを防ぐ
    - user-select: テキスト/要素の選択自体を無効化
    - -webkit-user-drag: 画像のドラッグ開始（ゴースト画像）を無効化（Safari/旧Chromium系）
    - -webkit-touch-callout: iOSでの長押しメニューを抑制
  */
  user-select: none; /* 要素の選択（ハイライト）を無効化 */
  -webkit-user-select: none; /* Safari/旧Chrome向けの指定（同上） */
  -webkit-touch-callout: none; /* iOSでの長押しメニューを無効化 */
  -webkit-user-drag: none; /* 画像のドラッグ開始を禁止（Safari/旧Chrome） */
}

/*
  背景円追従の実装メモ
  - 目的: ロゴ(img)の背後に色付き円を表示し、imgの位置/オフセットに“追従”させる。
  - 手法: 各アイコンdivの ::before で円を描画。色/太さは --bg-color / --bg-spread で個別制御。
  - 追従: img と同じ基準 (absolute + 50%/50% + translate(-50%, -50%)) で中央合わせ。
  - オフセット: 2/4/6番目の下方向ずらしは ::before にも同じ transform を適用して同期。
  - 重なり順: ::before が背景 (z-index:0)、img は前面 (z-index:1)。
  - レイアウト: 擬似要素のため拡張してもレイアウトに影響しない（枠外は overflow:visible で可視化）。
*/
/* 背景円（拡張＆追従）。色/サイズは各アイコンで変数指定 */
.icons > .various-icons > div::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(var(--icon-size) + 2 * var(--bg-spread));
  height: calc(var(--icon-size) + 2 * var(--bg-spread));
  transform: translate(-50%, -50%);
  border-radius: 50%;
  /* --bg-color が未指定でも安全に透明にフォールバック */
  background-color: var(--bg-color, transparent);
  z-index: 0;
  box-shadow: 0 3px 8px 0 rgba(0, 0, 0, 0.1);
}

/* 背景画像マッピングは不要（imgタグで表示するため削除） */

/* 2番目・4番目・6番目だけ子imgを下にずらす（relative+absoluteで演出） */
.icons > .various-icons > div:nth-child(2) > img,
.icons > .various-icons > div:nth-child(4) > img,
.icons > .various-icons > div:nth-child(6) > img {
  transform: translate(-50%, calc(-50% + var(--stagger-offset)));
}

/* 画像を下げるアイテム(2,4,6番目)に背景円も追従（img と同じ transform を適用） */
.icons > .various-icons > div:nth-child(2)::before,
.icons > .various-icons > div:nth-child(4)::before,
.icons > .various-icons > div:nth-child(6)::before {
  transform: translate(-50%, calc(-50% + var(--stagger-offset)));
}

/* Slack だけ背景の円を大きく（img サイズはそのまま）。
   親の背景色は使わず、::before の色で制御 */
.icons > .various-icons > .Slack {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #553958;
  --bg-spread: 1rem;
  background-color: transparent;
}

.icons > .various-icons > .ZenHub {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #364e98;
  --bg-spread: 1rem;
  background-color: transparent;
}

.icons > .various-icons > .TravisCI {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #eff9f9;
  --bg-spread: 1rem;
  background-color: transparent;
}

.icons > .various-icons > .Atom {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #5fb57d;
  --bg-spread: 1rem;
  background-color: transparent;
}

/* HTML側のクラス表記に合わせて CircleCi に統一 */
.icons > .various-icons > .CircleCi {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #022531;
  --bg-spread: 1rem;
  background-color: transparent;
}

/* 追加: HTMLのdivに存在する残りのクラス */
.icons > .various-icons > .Codeship {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #f3f6fb;
  --bg-spread: 1rem;
  background-color: transparent;
}

.icons > .various-icons > .codeclimate {
  /* 色はHTMLの style="--bg-color: ..." で指定推奨 */
  --bg-color: #303030;
  --bg-spread: 1rem;
  background-color: transparent;
}

.soft {
  display: flex;
  flex-direction: column;
  text-align: center;
  margin: 7rem;
}

.soft > p {
  color: var(--color-text-dark);
}

.soft > a {
  color: #0969da;
}
/*
  Marketplaceリンク内の矢印SVGをテキストと縦中央揃えにする
  - a要素を inline-flex にして、文字とアイコンを並べて align-items:center で縦中央
  - SVG側はフォントサイズに追従する 1em 四方にし、vertical-align:middle をフォールバックとして付与
*/
.GitHub-market-place {
  display: inline-flex; /* テキストとSVGを並べる（インラインのまま） */
  align-items: center; /* 行の中で縦方向を中央に揃える */
  justify-content: center; /* 横方向も中央に（必要に応じて） */
  margin-top: 1rem;
}

.arrow-icon-right-market-place {
  fill: #0969da; /* 矢印の色 */
  width: 1em; /* フォントサイズに合わせたアイコン高さ */
  height: 1em; /* フォントサイズに合わせたアイコン幅 */
  vertical-align: middle; /* フレックスでない場合の予備の縦中央揃え */

  margin-left: 0.25em; /* テキストとの間に少し余白を作る */
  margin-top: 0.2rem; /*ここがちょうど真ん中になる*/
}
